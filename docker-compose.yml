version: '3.8'

services:
  # Kafka-Krawler service
  kafka-krawler:
    build: .
    container_name: kafka-krawler
    volumes:
      # Mount output directory to persist data
      - ./output:/app/output
      # Mount logs directory
      - ./logs:/app/logs
      # Mount custom config if needed
      - ./config.yaml:/app/config.yaml:ro
      # Mount bootstrap servers file if using file mode
      - ./bootstrap_servers.txt:/app/bootstrap_servers.txt:ro
    environment:
      # Environment variables for configuration
      - PYTHONUNBUFFERED=1
    # Override default command - customize as needed
    command: ["--config", "/app/config.yaml", "--log-level", "INFO"]
    # Uncomment if you want to crawl external Kafka clusters
    # network_mode: "host"
    restart: unless-stopped

  # Optional: Local Kafka setup for testing
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: kafka-krawler-zk
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: kafka-krawler-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true

  # Optional: Kafka UI for managing topics and viewing data
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-krawler-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092

# Create named volumes for persistent data
volumes:
  kafka-data:
  zookeeper-data:

# Network for service communication
networks:
  default:
    name: kafka-krawler-network